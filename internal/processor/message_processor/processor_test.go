package message_processor_test

import (
	"fmt"
	"testing"

	"github.com/aatumaykin/go-obsidian-bot/internal/entity"
	"github.com/aatumaykin/go-obsidian-bot/internal/handler/message_handler/filter_message_handler"
	"github.com/aatumaykin/go-obsidian-bot/internal/processor/message_processor"
	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
	"github.com/stretchr/testify/assert"
)

type TestHandler struct {
	Note entity.Note
}

func (h *TestHandler) Handle(note entity.Note, _ tgbotapi.Message) (entity.Note, error) {
	h.Note = note

	return note, nil
}

func TestMessageProcessor_Process(t *testing.T) {
	tests := []struct {
		name     string
		userID   int64
		update   tgbotapi.Update
		wantText string
		wantErr  error
	}{
		{
			name:   "Test filter user",
			userID: 1,
			update: tgbotapi.Update{
				Message: &tgbotapi.Message{
					From: &tgbotapi.User{ID: 2},
				},
			},
			wantErr: fmt.Errorf("%w: %s", filter_message_handler.ErrFilterMessage, "message from another user"),
		},
		{
			name:   "Test filter text",
			userID: 1,
			update: tgbotapi.Update{
				Message: &tgbotapi.Message{
					From: &tgbotapi.User{ID: 1},
				},
			},
			wantErr: fmt.Errorf("%w: %s", filter_message_handler.ErrFilterMessage, "message text is empty"),
		},
		{
			// –≤ —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ –ª—é–±—è—Ç –≤—Å—Ç–∞–≤–ª—è—Ç—å —Å—Å—ã–ª–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª –≤ —Ç–æ—á–∫–∏ –∏ –∑–∞–ø—è—Ç—ã–µ
			name:   "Test filter text format",
			userID: 1,
			update: tgbotapi.Update{
				Message: &tgbotapi.Message{
					From: &tgbotapi.User{ID: 1},
					Caption: `Oatmeal

Oatmeal - —ç—Ç–æ —á–∞—Ç-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å —Ç–µ—Ä–º–∏–Ω–∞–ª—å–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º, –∫–æ—Ç–æ—Ä–æ–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É–µ—Ç —Å –±–æ–ª—å—à–∏–º–∏ —è–∑—ã–∫–æ–≤—ã–º–∏ –º–æ–¥–µ–ª—è–º–∏ (LLM), –∏—Å–ø–æ–ª—å–∑—É—è —Ä–∞–∑–ª–∏—á–Ω—ã–µ –±—ç–∫–µ–Ω–¥—ã –º–æ–¥–µ–ª–µ–π.

‚òùüèª–û–Ω –º–æ–∂–µ—Ç –±—ã—Ç—å –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω —Å —Ç–∞–∫–∏–º–∏ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞–º–∏, –∫–∞–∫ Neovim.

Oatmeal –ø–æ–∑–≤–æ–ª—è–µ—Ç –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Å –ø–æ–º–æ—â—å—é –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –∏–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Å–ª—ç—à-–∫–æ–º–∞–Ω–¥—ã –∏ –ø—É–∑—ã—Ä—å–∫–∏ —á–∞—Ç–∞.

–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –ø–æ–¥—Å–≤–µ—Ç–∫—É —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ –∫–æ–¥–∞ —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —Ç–µ–º–∞–º–∏.

–í—Å–µ —Å–µ–∞–Ω—Å—ã —á–∞—Ç–∞ —Å –º–æ–¥–µ–ª—è–º–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è, —á—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –∏–ª–∏ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Ä–∞–∑–≥–æ–≤–æ—Ä—ã.

https://github.com/dustinblackman/oatmeal

Site: https://dustinblackman.com/posts/oatmeal/`,
					CaptionEntities: []tgbotapi.MessageEntity{
						tgbotapi.MessageEntity{
							Type:   "bold",
							Offset: 0,
							Length: 7,
						},
						tgbotapi.MessageEntity{
							Type:   "text_link",
							Offset: 81,
							Length: 1,
							URL:    "https://t.me/open_source_friend",
						},
						tgbotapi.MessageEntity{
							Type:   "text_link",
							Offset: 142,
							Length: 1,
							URL:    "https://t.me/open_source_friend",
						},
						tgbotapi.MessageEntity{
							Type:   "text_link",
							Offset: 179,
							Length: 1,
							URL:    "https://t.me/open_source_friend",
						},
						tgbotapi.MessageEntity{
							Type:   "text_link",
							Offset: 232,
							Length: 1,
							URL:    "https://t.me/open_source_friend",
						},
						tgbotapi.MessageEntity{
							Type:   "text_link",
							Offset: 244,
							Length: 1,
							URL:    "https://t.me/open_source_friend",
						},
						tgbotapi.MessageEntity{
							Type:   "text_link",
							Offset: 352,
							Length: 1,
							URL:    "https://t.me/open_source_friend",
						},
						tgbotapi.MessageEntity{
							Type:   "text_link",
							Offset: 395,
							Length: 1,
							URL:    "https://t.me/open_source_friend",
						},
						tgbotapi.MessageEntity{
							Type:   "text_link",
							Offset: 467,
							Length: 1,
							URL:    "https://t.me/open_source_friend",
						},
						tgbotapi.MessageEntity{
							Type:   "text_link",
							Offset: 508,
							Length: 1,
							URL:    "https://t.me/open_source_friend",
						},
						tgbotapi.MessageEntity{
							Type:   "text_link",
							Offset: 587,
							Length: 1,
							URL:    "https://t.me/open_source_friend",
						},
						tgbotapi.MessageEntity{
							Type:   "url",
							Offset: 590,
							Length: 41,
						},
						tgbotapi.MessageEntity{
							Type:   "url",
							Offset: 639,
							Length: 41,
						},
					},
				},
			},
			wantText: `**Oatmeal**

Oatmeal - —ç—Ç–æ —á–∞—Ç-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å —Ç–µ—Ä–º–∏–Ω–∞–ª—å–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º, –∫–æ—Ç–æ—Ä–æ–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É–µ—Ç —Å –±–æ–ª—å—à–∏–º–∏ —è–∑—ã–∫–æ–≤—ã–º–∏ –º–æ–¥–µ–ª—è–º–∏ (LLM), –∏—Å–ø–æ–ª—å–∑—É—è —Ä–∞–∑–ª–∏—á–Ω—ã–µ –±—ç–∫–µ–Ω–¥—ã –º–æ–¥–µ–ª–µ–π.

‚òùüèª–û–Ω –º–æ–∂–µ—Ç –±—ã—Ç—å –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω —Å —Ç–∞–∫–∏–º–∏ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞–º–∏, –∫–∞–∫ Neovim.

Oatmeal –ø–æ–∑–≤–æ–ª—è–µ—Ç –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Å –ø–æ–º–æ—â—å—é –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –∏–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Å–ª—ç—à-–∫–æ–º–∞–Ω–¥—ã –∏ –ø—É–∑—ã—Ä—å–∫–∏ —á–∞—Ç–∞.

–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –ø–æ–¥—Å–≤–µ—Ç–∫—É —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ –∫–æ–¥–∞ —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —Ç–µ–º–∞–º–∏.

–í—Å–µ —Å–µ–∞–Ω—Å—ã —á–∞—Ç–∞ —Å –º–æ–¥–µ–ª—è–º–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è, —á—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –∏–ª–∏ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Ä–∞–∑–≥–æ–≤–æ—Ä—ã.

https://github.com/dustinblackman/oatmeal

Site: https://dustinblackman.com/posts/oatmeal/

`,
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			testHandler := &TestHandler{}

			p, err := message_processor.NewProcessor(
				message_processor.WithFilterMessageHandler(
					filter_message_handler.WithUserID(tt.userID),
				),
				message_processor.WithTextHandler(),
				message_processor.WithTextFormatHandler(),
			)
			assert.NoError(t, err)

			p.AddHandler(testHandler)
			err = p.Process(tt.update)

			if tt.wantErr != nil {
				assert.Error(t, err)
				assert.Equal(t, tt.wantErr, err)
			} else {
				assert.NoError(t, err)
				assert.Equal(t, tt.wantText, testHandler.Note.Text)
			}
		})
	}
}
